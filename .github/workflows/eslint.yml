name: Frontend

on:
    push:

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restoring npm cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Bootstraping packages
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install
        
      - name: ESLint Checking
        run: npm run lint

      - name: TSLint Checking
        run: npx tsc --noEmit
    
  Unit-test:
    runs-on: ubuntu-latest
    needs: [Lint]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restoring npm cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Bootstraping packages
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Run jest
        run: npm run test
      
  Deploy:
    if: github.ref == 'refs/heads/deploy'
    runs-on: ubuntu-latest
    needs: [Lint, Unit-test]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Login to YC Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build docker image
        run: make build-image
      
      - name: Push docker image
        run: make push-image
      
      - name: Pull and run on server
        uses: appleboy/ssh-action@master
        with:
          host: pickpin.ru
          username: ubuntu
          key: ${{ secrets.PRACTICALDEV_CERT }}
          script: |
            cat key.json | docker login \
            --username json_key \
            --password-stdin \
            cr.yandex

            cd 2023_Practical_Dev/frontend
            git checkout deploy
            git pull --rebase

            make pull-image
            make deploy

            cd ~
            docker compose restart swag
